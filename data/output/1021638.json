{"id": "1021638", "question": "神经网络的输出值总是一样", "description": "<div class=\"col-md-11 col-xs-10\"><p><br/></p><pre><code class=\"python\">#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon May 4 15:43:05 2020\n@author: li_hy\n\"\"\"\n\nimport tensorflow as tf\nimport numpy as np\nfrom scipy.io import loadmat as load\nfrom tensorflow.keras import layers,optimizers,Sequential\nfrom tensorflow.keras import Model\nfrom tensorflow.keras.layers import Conv1D, BatchNormalization, Activation, MaxPool1D, Dropout, Flatten, Dense\nfrom matplotlib import pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nimport os\n\nclass Mynet(Model):\n    def __init__(self):\n        super(Mynet, self).__init__()\n        self.c1 = Conv1D(filters=3, kernel_size=3, activation='sigmoid')\n        self.b1 = BatchNormalization()\n        self.a1 = Activation('sigmoid')\n        self.p1 = MaxPool1D(pool_size=3, strides=2)\n        self.flatten = Flatten()\n        self.f1 = Dense(2048, activation='sigmoid')\n        self.f2 = Dense(3, activation='softmax')\n    def call(self, x):\n        x = self.c1(x)\n        x = self.b1(x)\n        x = self.a1(x)\n        x = self.p1(x)\n        #x = self.d(x)\n        x = self.flatten(x)\n        x = self.f1(x)\n        y = self.f2(x)\n        return y\n\n\nmodel = Mynet()\nopt=tf.keras.optimizers.SGD(\n    learning_rate=0.001, momentum=0.0, nesterov=False, name='SGD'\n    )\nmodel.compile(optimizer=opt,     loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=False),\n              metrics=['sparse_categorical_accuracy'])\nscaler = StandardScaler()\n#数据归一化\nx_train = scaler.fit_transform(x_train.astype(np.float32).reshape(-1,1)).reshape(-1,5,16384) \nx_test =scaler.fit_transform(x_test.astype(np.float32).reshape(-1,1)).reshape(-1,5,16384) \n#print(x_train[0])\nhistory = model.fit(x_train, y_train, batch_size=8, epochs=20, validation_data=(x_test, y_test), validation_freq=1)\n#model.summary()  \ny=model.predict(x_train)\n\nprint(y)\nprint('-----------------')\nprint(y_train)</code></pre><p><br/></p><p>输出的预测结果和输入数据完全没有关系，而且数值几乎一模一样</p></div>", "viewer": 2334, "tags": ["统计/机器学习", "深度学习", "损失函数", "人工神经网络", "TensorFlow"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>你没有train model 啊。Keras 应该是model.fit()</p></div>", "lvl2_answer": []}]}