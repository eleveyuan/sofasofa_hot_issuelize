{"id": "1000389", "question": "sklearn.decomposition.PCA方法中fit, fit_transform, transform应该怎么用", "description": "<div class=\"col-md-11 col-xs-10\"><p>我想用Python里sklearn.decomposition.PCA函数对数据进行降维。我看到有三个方法，一个是fit，一个是fit_transform，还有一个是transform，这三个到底怎么用？</p></div>", "viewer": 11646, "tags": ["统计/机器学习", "数据降维", "Python"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>fit, fit_transform, transform这三个方法用数学公式表达起来可能更直白。</p><p>假设需要被PCA的原始矩阵是$X$，$n$行$p$列，PCA的参数$n\\_component = k \\ll p$.</p><p>按照PCA的原理,</p><p>$$X\\approx M N,$$</p><p>其中矩阵$M$是$n$行$k$列，$N$是$k$行$p$列。因为$NN^T$约等于单位矩阵，</p><p>$$M \\approx XN^T,$$</p><p>$M$就是降维之后的数据，只剩下了$k$个特征。</p><p><br/></p><p>&gt;&gt;&gt; pca = sklearn.decomposition.PCA(n_components=k)</p><p>&gt;&gt;&gt; pca.fit(X)</p><p># fit就相当于求$N$的过程。</p><p>&gt;&gt;&gt; M = pca.transform(X)</p><p># transform就相当于用矩阵$N$左乘$X$，从而得到$M$。</p><p><br/></p><p>当然这两步也可以合成一步来完成</p><p>&gt;&gt;&gt; pca = sklearn.decomposition.PCA(n_components=k)</p><p>&gt;&gt;&gt; M = pca.fit_transform(X)</p><p><br/></p><p>如果你想用$X$降维的方式对另外一个数据集$S$进行降维（比如先对训练集降维，然后对测试集用一样的方式进行降维），</p><p>$$H \\approx SN^T$$</p><p>那么fit和transform两个步骤就不能合并了。</p><p>&gt;&gt;&gt; pca = sklearn.decomposition.PCA(n_components=k)</p><p>&gt;&gt;&gt; pca.fit(X)</p><p>&gt;&gt;&gt; H = pca.transform(S)</p><p><br/></p><p><br/></p></div>", "lvl2_answer": []}]}