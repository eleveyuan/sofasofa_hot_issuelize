{"id": "1005947", "question": "python中怎么对一组逻辑变量求“或”？", "description": "<div class=\"col-md-11 col-xs-10\"><p>python中怎么对一组逻辑变量求“或”？</p><p>比如一个列表x，里面有10个元素，x=[x1, x2, ...]，如果要对所有的元素求或运算，就需要写很长的式子</p><pre><code class=\"python\">x1 | x2 | x3 | x4 | x5 | x6 | x7 | x8 | x9 | x10</code></pre><p>有什么简便的方法吗？</p></div>", "viewer": 2349, "tags": ["算法/数据结构/数据库", "Python"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>对于或运算，只要有一个是True，整个就是True了</p><pre><code class=\"python\">&gt;&gt;&gt; x = [True, False, True, False, False]\r\n&gt;&gt;&gt; True in x\r\nTrue</code></pre><p>也可以看整个list中的最大值</p><pre><code class=\"python\">&gt;&gt;&gt; x = [True, False, True, False, False, False, False]\r\n&gt;&gt;&gt; max(x)\r\nTrue</code></pre></div>", "lvl2_answer": []}, {"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>也可以用numpy的any函数</p><p><br/></p><pre><code class=\"python\">Examples\n--------\n&gt;&gt;&gt; np.any([[True, False], [True, True]])\nTrue\n\n&gt;&gt;&gt; np.any([[True, False], [False, False]], axis=0)\narray([ True, False])\n\n&gt;&gt;&gt; np.any([-1, 0, 5])\nTrue\n\n&gt;&gt;&gt; np.any(np.nan)\nTrue\n\n&gt;&gt;&gt; o=np.array([False])\n&gt;&gt;&gt; z=np.any([-1, 4, 5], out=o)\n&gt;&gt;&gt; z, o\n(array([ True]), array([ True]))\n&gt;&gt;&gt; # Check now that z is a reference to o\n&gt;&gt;&gt; z is o\nTrue\n&gt;&gt;&gt; id(z), id(o) # identity of z and o              # doctest: +SKIP\n(191614240, 191614240)</code></pre><p><br/></p></div>", "lvl2_answer": []}]}