{"id": "1001170", "question": "gbdt如何对连续特征离散化", "description": "<div class=\"col-md-11 col-xs-10\"><p>有时候对连续特征处理时，例如年龄，需要离散化，但是不知道怎样离散化比较合适，听说gbdt可以离散化，请问是怎样实现的？</p></div>", "viewer": 7877, "tags": ["统计/机器学习", "数据预处理", "特征选择"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p><span style=\"font-size: 14px;\">我抛砖引玉一下。</span></p><p><span style=\"font-size: 14px;\">对连续特征离散化是决策树本身就可以做到的，而不是非要gradient boost。</span></p><p><span style=\"font-size: 14px;\">决策树是这样做的。</span></p><ul><li><span style=\"font-size: 14px;\">首先对这个连续变量排序。比如说年龄，把所有样本中年龄的数值从小到大排序。</span></li><li><span style=\"font-size: 14px;\">在数据没有重复的假设下，如果有n个样本，那么排序后的数据之间应该有n-1个间隔。</span></li><li><span style=\"font-size: 14px;\">决策树会对这n-1个间隔进行逐一尝试（分叉），每个不同的分叉，会带来不同的gini指数，我们最终选gini指数最小的那个分叉作为最优分叉。</span></li></ul><p><span style=\"font-size: 14px;\">理论上是这样进行的，但是实际情况是为了一些计算优化，可能会进行一些随机搜索，而不一定是遍历。</span></p><p><span style=\"font-size: 14px;\">上面这个过程就把那个连续变量进行了一分为二（第一次离散化），比如说年龄被分成了0到20岁，20到100岁。</span></p><p><span style=\"font-size: 14px;\">接下来，当决策树继续生长时，之前一分为二的连续特征可能会再次被选中。比如说20到100岁这个分叉被选中，我们再次重复上面那三个步骤。这次得到的结果可能是20到35，35到100岁。</span></p><p><span style=\"font-size: 14px;\"><br/></span></p><p><span style=\"font-size: 14px;\">以此反复，这样一个连续变量就不停地被离散化，直到模型达到停止的条件。</span></p><p><span style=\"font-size: 14px;\"><br/></span></p><p><br/></p></div>", "lvl2_answer": []}]}