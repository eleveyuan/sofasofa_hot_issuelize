{"id": "1656037", "question": "怎么按照设定概率产生不重复的随机排序？", "description": "<div class=\"col-md-11 col-xs-10\"><p>例如5个运动员参加比赛，运动员A有10%的概率夺冠，B有30%的概率，C有5%的概率，D是15%，E有40%。现在想产生一个随机的名词排序，抽样的时候要符合上面的概率。</p><p>这个问题可以是看作是无放回的抽样，但是又要保证每个数都要正好只出现一次。</p><p>在python里的实现方式没有什么思路，求助大家。</p></div>", "viewer": 71, "tags": ["统计/机器学习", "概率分布", "抽样方法", "Python"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>看来下numpy random里的permutation和choice都不能满足题主的要求。</p><p>我试着自己写了一个，基本上是暴力解法，轻拍</p><pre><code class=\"python\">import numpy as np\r\n\r\ndef random_rank(members, probs):\r\n    if len(members) &lt;= 1:\r\n        return members\r\n    else:\r\n        rank_1 = np.random.choice(members, size=1, p=np.array(probs)/np.sum(probs))[0]\r\n        rank_1_i = members.index(rank_1)\r\n        new_members = members[:rank_1_i] + members[rank_1_i+1:]\r\n        new_probs = probs[:rank_1_i] + probs[rank_1_i+1:]\r\n        rank_else = random_rank(new_members, new_probs)\r\n        return [rank_1] + rank_else</code></pre><p>用了递归的思想，先从members里按照概率，产生一个冠军；冠军产生后把他从members剔除掉，然后剩下的人里按照概率再产生一个冠军，然后依次进行。</p></div>", "lvl2_answer": []}]}