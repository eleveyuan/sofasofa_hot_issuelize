{"id": "1007358", "question": "目标约束", "description": "<div class=\"col-md-11 col-xs-10\"><p>首先 感谢 tbh 对上次提问的解答</p><p><br/></p><p>这是我实现的单输入两输出模型，输入：5维  输出----fc_a：3维（要求：3个维度输出之和为1）、fc_b：2维 </p><pre><code class=\"python\">......\nx = tf.keras.layers.Dense(64)(inputs) \nx = tf.keras.layers.Dense(64)(x) \nfc_a=tf.keras.layers.Dense(name='fc_a',units=3,activation=tf.nn.softmax)(x) \nfc_b=tf.keras.layers.Dense(name='fc_b',units=2)(x) \nmodel = tf.keras.Model(inputs=inputs, outputs=[fc_a, fc_b]) \nmodel.compile(optimizer='Adam', loss='mean_squared_error',metrics=['mse']) \nhistory=model.fit(X_train,[y1_train,y2_train],epochs=300,batch_size=10) \n.....</code></pre><p>预测效果不好，请问，如何进行约束呢？自定义loss 或者激励函数？查了半天，keras的loss都是定义在y_pred 与y_true上的 </p><p><br/></p></div>", "viewer": 1399, "tags": ["统计/机器学习", "监督式学习", "深度学习", "TensorFlow"], "answers": []}