{"id": "1003935", "question": "python里@property有什么用", "description": "<div class=\"col-md-11 col-xs-10\"><p>python的class里出现的@property是什么意思？有什么用？</p><p>比如下面这个例子</p><pre><code class=\"python\">class MyClass:\r\n    ...\r\n    @property\r\n    def get_date(self):\r\n        return self._get_date</code></pre></div>", "viewer": 4071, "tags": ["统计/机器学习", "Python"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>将类方法转换为只读属性</p><p>例如</p><p><br/></p><p><br/></p><pre><code class=\"python\">class MyClass:\n    def __init__(self,a,b):\n        self.a = a\n        self.b = b\n\n    def a_add_b(self):\n        return self.a+self.b\n\nIn [13]:m=MyClass(1,2)\nIn [14]: m.a_add_b()\nOut[14]: 3\nIn [16]: m.a_add_b\n</code>Out[16]: &lt;bound method MyClass.a_add_b of &lt;__main__.MyClass object at 0x000001795A776CC0&gt;&gt;</pre><pre><code class=\"python\">In [4]: m.a_add_b = 4\nIn [5]: m.a_add_b\nOut[5]: 4\nIn [6]: m.a_add_b()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-6-1941f5fcab4a> in <module>()\n----&gt; 1 m.a_add_b()\n\nTypeError: 'int' object is not callable\n</module></ipython-input-6-1941f5fcab4a></code></pre><pre><bound at=\"\" method=\"\" myclass.a_add_b=\"\" object=\"\" of=\"\"><br/></bound></pre><p><br/></p><pre><code class=\"python\"><bound at=\"\" method=\"\" myclass.a_add_b=\"\" object=\"\" of=\"\">\nclass MyClass:\n    def __init__(self,a,b):\n        self.a = a\n        self.b = b\n\n    @property\n    def a_add_b(self):\n        return self.a+self.b\n\nIn [21]: m=MyClass(1,2)\nIn [22]: m.a_add_b\nOut[22]: 3\nIn [23]: m.a_add_b=4\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-23-a672bc58028c> in <module>()\n----&gt; 1 m.a_add_b=4\n\nAttributeError: can't set attribute</module></ipython-input-23-a672bc58028c></bound></code></pre><p><br/></p></div>", "lvl2_answer": []}, {"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>cabbage提到了只读，此外，property是一个装饰器，把一个method装饰成attribute。好处是什么呢，只有当该attribute被调用的时候，才会被计算。比如下面这个例子，</p><pre><code class=\"python\">class Tester:\r\n    def __init__(self, a):\r\n        self._a = a\r\n    \r\n    @property\r\n    def a(self):\r\n        return self._a\r\n    \r\n    @property\r\n    def square(self):\r\n        return self.a ** 2</code></pre><p>初始化</p><pre><code class=\"python\">t = Tester(2)\r\nprint(t.square)</code></pre><p>显示结果为4。所以定义的时候是个方法，调用的时候被装饰为属性。</p></div>", "lvl2_answer": []}]}