{"id": "1003348", "question": "python中如何产生交互项？", "description": "<div class=\"col-md-11 col-xs-10\"><p>比如我想对两个特征x1和x2做交互项，在python里有什么方法吗？</p><p>在R里的话，可以直接用</p><pre><code class=\"python\">y ~ x1 + x2 + x1:x2</code></pre><p>python里如果是sklearn模型的话，怎么能够得到两个特征的交互项呢？</p></div>", "viewer": 5501, "tags": ["统计/机器学习", "监督式学习", "数据预处理", "特征选择", "Python"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>sklearn里的PolynomialFeatures可以基本实现这个功能</p><pre><code class=\"python\">from sklearn.preprocessing import PolynomialFeatures\r\n# 新建一个dataframe\r\nX = pd.DataFrame()\r\nX['x1'] = [1, 1, 1, 2, 0, 0]\r\nX['x2'] = [3, 2, 1, 3, 2, 1]</code></pre><p>下面构造交互项</p><pre><code class=\"python\">interaction = PolynomialFeatures(2, interaction_only=True, include_bias=False)\r\nX_transformed = interaction.fit_transform(X)</code></pre><p>得到的X_transformed就有三列，第三列是x1和x2的乘积</p><pre><code class=\"python\">array([[ 1.,  3.,  3.],\r\n       [ 1.,  2.,  2.],\r\n       [ 1.,  1.,  1.],\r\n       [ 2.,  3.,  6.],\r\n       [ 0.,  2.,  0.],\r\n       [ 0.,  1.,  0.]])</code></pre><p><br/></p></div>", "lvl2_answer": []}, {"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>直接手算似乎更方便</p><pre><code class=\"python\">df['x1_x2'] = df['x1'] * df['x2']</code></pre></div>", "lvl2_answer": []}]}