{"id": "1005788", "question": "为什么我用随机森林模型每次的score都不同 差异很大", "description": "<div class=\"col-md-11 col-xs-10\"><p>随机森林模型 回归 ，</p><pre><code class=\"python\">import numpy as np\nimport pandas as pd\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\n\ndata =pd.read_excel(\"data.xlsx\",\"Sheet1\")\ndata= data.dropna()\nX=data.iloc[:,3:7]\ny=data.iloc[:,10]\nX_train, X_test, y_train, y_test=train_test_split(X,y,test_size=0.3)\nrfr = RandomForestRegressor(n_estimators=20, max_features='auto',random_state=0)\n#rfr.fit(X_train,y_train)\nkf = KFold(n_splits=5, shuffle=True)\nscore_ndarray = cross_val_score(rfr, X, y, cv=kf)\nprint(score_ndarray)</code></pre><p>400多个样本；</p><p>这个是5次的结果</p><p>[ 0.220815    0.6115134  -0.72378707  0.51356938  0.36471651]</p></div>", "viewer": 6841, "tags": ["统计/机器学习", "回归分析", "模型验证", "Python"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>你每次R方都不同，估计是因为你的模型很不稳健，与过拟合有关。你可以增加n_estimators，同时还需要设置最大深度，因为你的特征只有4个，max_depth设置为4就够了应该。</p><p>此外，cross_val_score默认的scoring是R方，你可以换成其他的试试，比如rmse</p><pre><code class=\"python\">score_ndarray = cross_val_score(rfr, X, y, cv=kf, scoring='neg_mean_squared_error')</code></pre><p>或者mae</p><pre><code class=\"python\">score_ndarray = cross_val_score(rfr, X, y, cv=kf, scoring='neg_mean_absolute_error')</code></pre></div>", "lvl2_answer": []}, {"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>随机森林本来也是具有随机性的，所有每个fold结果相差很正常。如果你增加树的数量，应该每个fold的结果会相近一些。如果你数据量不够大的话，建议把fold数少一些，比如3fold。</p></div>", "lvl2_answer": []}]}