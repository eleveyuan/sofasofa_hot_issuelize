{"id": "1000992", "question": "对于数值特征，决策树是如何决定阈值的？", "description": "<div class=\"col-md-11 col-xs-10\"><p>对于一个二元特征，决策树很自然地进行分叉，一个树枝的条件是该特征为0，另一个树枝是该特征为1。</p><p><br/></p><p>对于一个数值特征，决策树的节点分叉通常是，如果x &lt; 某个数，进入这个子决策树，如果x &gt;= 某个数，进入另外一个子决策树。我想知道的是，对于数值变量这个阈值（上面的“某个”）是如何确定的呢？</p><p><br/></p><p>谢谢！</p></div>", "viewer": 11498, "tags": ["统计/机器学习", "监督式学习", "特征选择"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><ul><li><span style=\"font-size: 14px;\">首先对这个连续变量排序。比如说年龄，把所有样本中年龄的数值从小到大排序。</span></li><li><span style=\"font-size: 14px;\">在数据没有重复的假设下，如果有n个样本，那么排序后的数据之间应该有n-1个间隔。</span></li><li><span style=\"font-size: 14px;\">决策树会对这n-1个间隔进行逐一尝试（分叉），每个不同的分叉，会带来不同的gini指数，我们最终选gini指数最小的那个分叉作为最优分叉，也就是阈值。</span></li></ul><p><span style=\"font-size: 14px;\">理论上是这样进行的，但是实际情况是为了一些计算优化，可能会进行一些随机搜索，而不一定是遍历。</span></p><p><span style=\"font-size: 14px;\">上面这个过程就把那个连续变量进行了一分为二（第一次离散化），比如说年龄被分成了0到20岁，20到100岁。</span></p><p><span style=\"font-size: 14px;\">接下来，当决策树继续生长时，之前一分为二的连续特征可能会再次被选中。比如说20到100岁这个分叉被选中，我们再次重复上面那三个步骤，再去寻找下一个次分叉的阈值。这次得到的结果可能是20到35，35到100岁。</span></p><p><span style=\"font-size: 14px;\">以此反复，这样一个连续变量就不停地被离散化，直到模型达到停止的条件。</span></p><p><br/></p></div>", "lvl2_answer": []}, {"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>假如训练集上有Age这么个特征，数值分别为</p><p>10，11， 16， 18， 20， 35</p><p>那么在这个节点上，算法会自动考虑下面几种划分的可能</p><pre><code class=\"python\">Age &lt;=10 和 Age&gt;10\r\n\r\nAge &lt;=11 和 Age&gt;11\r\n\r\nAge &lt;=16 和 Age&gt;16\r\n\r\nAge &lt;=18 和 Age&gt;18\r\n\r\nAge &lt;=20 和 Age&gt;20</code></pre><p>六个数值点，所以就有5个对应划分的可能。对这5个可能一一尝试，选出损失函数最小的那个。</p><p><br/></p></div>", "lvl2_answer": []}, {"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>对于数值特征，决策树会对所有取值一一尝试，直到选择到最好的。</p><p>对于分类，就是对应gini最小</p><p>对于回归，就是对应rmse最小</p><p><br/></p></div>", "lvl2_answer": []}]}