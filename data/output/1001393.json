{"id": "1001393", "question": "用python求二元分类的混淆矩阵", "description": "<div class=\"col-md-11 col-xs-10\"><p>各位大佬好，请问怎么用python求二元分类的混淆矩阵？</p><p>谢谢！</p><p><br/></p></div>", "viewer": 6811, "tags": ["统计/机器学习", "监督式学习", "模型验证", "Python"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>sklearn里可以直接计算混淆矩阵<a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html\" target=\"_blank\">sklearn.metrics.confusion_matrix</a> </p><pre><code class=\"python\">from sklearn.metrics import confusion_matrix\r\nconfusion_matrix(y_true, y_pred)</code></pre><p>也可以通过confusion_matrix函数直接得到TN, FP, FN, TP</p><pre><code class=\"python\">tn, fp, fn, tp = confusion_matrix(y_true, y_pred).ravel()</code></pre><p><br/></p></div>", "lvl2_answer": ["谢谢！"]}, {"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>confusion matrix本质上就是列联表，pandas里的crosstab可以得到列联表。参考下面的代码</p><pre><code class=\"python\">&gt;&gt; results = pd.DataFrame()\r\n&gt;&gt; results['True'] = [1, 1, 1, 1, 1, 0, 0, 0]\r\n&gt;&gt; results['Pred'] = [1, 1, 0, 0, 1, 1, 0, 0]\r\n\r\n# 用pd.crosstab可以得到confusion matrix\r\n&gt;&gt; pd.crosstab(results['True'], results['Pred'])\r\n\r\nPred\t0\t1\r\nTrue\t\t\r\n0\t2\t1\r\n1\t2\t3</code></pre><p><br/></p></div>", "lvl2_answer": ["谢谢！"]}]}