{"id": "1655955", "question": "python里怎么计算曼哈顿距离？", "description": "<div class=\"col-md-11 col-xs-10\"><p>python里怎么计算两个向量的曼哈顿距离？<br/></p></div>", "viewer": 141, "tags": ["统计/机器学习", "描述性统计", "Python"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>曼哈顿距离其实就是L1距离，$x=(x_1,\\cdots, x_n)$，$y=(y_1,\\cdots,y_n)$，曼哈顿距离就是</p><p>$$\\sum_{i=1}^n|x_i-y_i|$$</p><p>定义清楚了，代码就很好写了</p><pre><code class=\"python\">import numpy as np\nx = np.random.random(10)\ny = np.random.random(10)\n# 计算曼哈顿距离\nd1 = np.sum(np.abs(x - y))</code></pre><p><br/></p></div>", "lvl2_answer": []}, {"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>numpy有自带的范数公式，可以用计算对应范数的距离</p><pre><code class=\"python\">from numpy import array\nfrom numpy.linalg import norm\nx = array([1, 2, 3, 4, 5])\ny = array([2, 0, 3, 5, 1])\n\n# 曼哈顿距离对应着L1范数\nd1 = norm(x - y, ord=1))\n\n# 欧式距离对应着L2范数\nd2 = norm(x - y, ord=2))</code></pre><p><br/></p></div>", "lvl2_answer": []}]}