{"id": "1000482", "question": "R里有没有package可以画ROC，计算AUC的？", "description": "<div class=\"col-md-11 col-xs-10\"><p>R里有没有package可以画ROC，计算AUC的？能够有例子如何使用更好！</p><p>谢谢！</p></div>", "viewer": 7431, "tags": ["统计/机器学习", "模型验证", "R"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>可以用<a href=\"https://cran.r-project.org/web/packages/pROC/pROC.pdf\" target=\"_blank\">pROC</a> </p><pre><code class=\"R\">#加载pROC\nlibrary(pROC)\n\n#画出ROC曲线\nplot.roc(actual, prediction)\n\n#计算ROC AUC\nauc(actual, prediction)</code></pre><p><br/></p></div>", "lvl2_answer": ["It should be \"plot.roc\" function.", "谢谢修正！我编辑一下"]}, {"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>pROC比较慢，github上有人贴出了一个<a href=\"https://gist.github.com/traversc/1446ebe1dcc2d84bccdca781d4f1fa2a\" target=\"_blank\">更快的版本</a>。代码如下：</p><pre><code class=\"python\">fastROC &lt;- function(probs, class) {\r\n    class_sorted &lt;- class[order(probs, decreasing=T)]\r\n    TPR &lt;- cumsum(class_sorted) / sum(class)\r\n    FPR &lt;- cumsum(class_sorted == 0) / sum(class == 0)\r\n    return(list(tpr=TPR, fpr=FPR))\r\n}\r\n\r\n# Helpful function adapted from: https://stat.ethz.ch/pipermail/r-help/2005-September/079872.html\r\nfastAUC &lt;- function(probs, class) {\r\n    x &lt;- probs\r\n    y &lt;- class\r\n    x1 = x[y==1]; n1 = length(x1); \r\n    x2 = x[y==0]; n2 = length(x2);\r\n    r = rank(c(x1,x2))  \r\n    auc = (sum(r[1:n1]) - n1*(n1+1)/2) / n1 / n2\r\n    return(auc)\r\n}</code></pre><p><br/></p></div>", "lvl2_answer": []}]}