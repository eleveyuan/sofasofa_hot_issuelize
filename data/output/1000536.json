{"id": "1000536", "question": "t-SNE如何实现降维？", "description": "<div class=\"col-md-11 col-xs-10\"><p>t-SNE是如何实现降维的？</p></div>", "viewer": 5011, "tags": ["统计/机器学习", "数据降维", "特征选择"], "answers": [{"lvl1_answer": "<div class=\"col-md-11 col-xs-10 p-r\"><p>一直没有人回答，我试着简短的强行回答一下。</p><p><br/></p><p>\n</p><p>t-SNE中t是指T distribution，s是指stochastic，n是指neighbor，e是指embedding。</p><p><br/></p><p>\n</p><p><b>简单来说，t-SNE做的是一种从高维空间到低维空间的保“距”变换。</b></p><p><br/></p><p>\n</p><p>如果两个点在100维的空间里“距离”是1，我们希望找到一个映射，把这两个点映射到低维（比如2维）空间里，它们的距离也是1。这样达到的效果就是，在原空间里距离远的点，那么在新的低维空间里距离也远；在原空间里距离近的点，那么在新的低维空间里距离也近。</p><p><br/></p><p>\n</p><p>这个所谓的“距离”，不是真正的距离，而是一种相似度。两个数据点的相似度的计算主要是依据两点的欧式距离，并且对其进行一些标准化的处理。处理时用到了t分布这个假设。</p><p><br/></p><p>\n</p><p>这个从高维到低维的映射，首先需要设置随机初始点，然后进行优化，从而使得两个“距离”相等。</p><p><br/></p></div>", "lvl2_answer": []}]}